Aufgabe1.1

•	Funktioniert diese Lösung grundsätzlich?

        Yes it would work but its just to complicated too implement.

•	Welche Nachteile könnten bei dieser Lösung insbesondere in Hinblick auf spätere Wartbarkeit und Erweiterbarkeit der Implementierung entstehen?

        When you want to add a new meal you need to implement a subclass for every extra that is available.


Aufgabe 1.2

Welche Vorteile bringt diese Lösung gegenüber der ersten Lösung?

    Überlegen Sie sich in Hinblick auf die Wartbarkeit und die Erweiterbarkeit des Designs unter anderem folgende Punkte:

        •	Was passiert, wenn neue Gerichte bzw. Extras hinzukommen (z.B. eine Palatschinke mit dem Extra Schokosauce)?

                Every new meal has access to all extras and every old meal has access to every new extra.

        •	Was passiert, wenn ein Kunde zwei Gurken und extra viel Senf zu seiner Bratwurst haben möchte?

                You would need to make a loop and ask how many of each extra the customer would like.

Aufgabe 3

Erklären Sie in Bezug auf UML-Zustandsdiagramme folgende Begriffe bzw. Konzepte:
•	Ereignis,

        CallEvent

            Receiving news to change state. e.g. method call

        SignalEvent

            Receiving a signal to change state. e.g. mouse click

        ChangeEvent

            Repeatedly checking if the condition is true.

        TimeEvent

            Changing state after a set amount of time.

•	Bedingung,

        A Condition to change the state.

•	Aktivität, Entry-Aktivität, Exit-Aktivität, Do-Aktivität.

        • entry /aktivität

            Gets executed when entering the state.

        • exit /aktivität

            Gets executed when exiting the state.

        • do /aktivität

            Gets executed while in the state.

•	History-Zustand - Was versteht man in diesem Zusammenhang unter flachem und tiefem History-Zustand?

        It remembers the state of the last transition. You can come back to that state later on.

        • Flacher History-Zustand

            Remembers the state of one level.

        • Tiefer History-Zustand

            Remembers every state of every level.

•	Komplexer Zustand

        A complex state is a state which has sub-states in it.

•	UND-Verfeinerung, ODER-Verfeinerung

        • ODER-Verfeinerung

            The sub-states are disjoint, which means that exactly one sub-state is active.

        • UND Verfeinerung

            The sub-states are running parallel.